{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Read Feedback Log",
      "type": "shell",
      "command": "python ${workspaceFolder}/read_feedback.py",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Watch Feedback Log",
      "type": "shell",
      "command": "python ${workspaceFolder}/read_feedback.py --watch",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "Open Feedback Log for Composer",
      "type": "shell",
      "command": "python -c \"import os, pathlib; home = str(pathlib.Path.home()); log_path = os.path.join(home, '.feedbackloop', 'feedback.log'); print(f'Opening {log_path}'); os.system(f'code -r \"{log_path}\"') if os.path.exists(log_path) else print('Feedback log not found at ' + log_path)\"",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Add Feedback Log to Composer",
      "type": "shell",
      "command": "python ${workspaceFolder}/add_feedback_to_composer.py",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Clear Feedback Log",
      "type": "shell",
      "command": "python ${workspaceFolder}/clear_feedback.py",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Install Native Host",
      "type": "shell",
      "command": "python ${workspaceFolder}/native-host/install_host.py",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Setup Extension",
      "type": "shell",
      "command": "python ${workspaceFolder}/setup.py",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Sample Website",
      "type": "shell",
      "command": "cd ${workspaceFolder}/sample-website && python -m http.server 8000",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "Check Extension Setup",
      "type": "shell",
      "command": "python ${workspaceFolder}/check_extension.py",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    }
  ]
} 